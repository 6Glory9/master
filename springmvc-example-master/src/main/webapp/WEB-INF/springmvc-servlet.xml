<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
		  http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		  http://www.springframework.org/schema/context
		  http://www.springframework.org/schema/context/spring-context-3.0.xsd
          http://www.springframework.org/schema/util
          http://www.springframework.org/schema/util/spring-util-3.0.xsd ">


    <context:component-scan base-package="web"/>

    <!--
    apache文件上传处理器,引入相应的包commons-fileupload,commons-io
    -->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="defaultEncoding" value="utf-8"/>
        <property name="maxUploadSize" value="10485760000"/>
        <property name="maxInMemorySize" value="40960"/>
    </bean>


    <!--处理静态文件一种方式 SimpleUrlHandlerMapping-->
    <bean class="org.springframework.web.servlet.handler.SimpleUrlHandlerMapping">
        <property name="mappings">
            <map>
                <entry key="/resources/**" value-ref="resourceHttpRequestHandler" />
            </map>
        </property>
        <property name="order" value="2" />
    </bean>

    <!--resourceHttpRequestHandler-->
    <bean id="resourceHttpRequestHandler" class="org.springframework.web.servlet.resource.ResourceHttpRequestHandler">
        <property name="locations">
            <util:list>
                <value>/static/</value>
            </util:list>
        </property>
    </bean>


    <!--HttpRequestHandlerAdapter 处理 resourceHttpRequestHandler-->
    <bean id="httpRequestHandlerAdapter" class="org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter" />



    <!--处理器映射器,找到相应的Handler-->
    <bean id="requestMappingHandlerMapping"
          class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping">
        <property name="order" value="1"/>
    </bean>



    <!--相应的controller处理模板-->
    <bean id="requestMappingHandlerAdapter"
          class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
        <!--args,returnValue转换的时候可能用到转换器，如requestBody-->
        <property name="messageConverters" ref="httpMessageConverter"/>
        <!--webBindingInitializer 是对 WebDataBinder 进行初始化
        1.WebDataBinderFactory create WebDataBinder
        2.webBindingInitializer  init WebDataBinder
        3.all @InitBind init WebDataBinder  @ModelAttributeMethodProcessor
        -->
        <property name="webBindingInitializer" ref="configurableWebBindingInitializer"/>
    </bean>


    <!--bodyRequest,bodyResonse-->
    <util:list id="httpMessageConverter">
        <bean class="org.springframework.http.converter.ByteArrayHttpMessageConverter"/>
        <bean class="org.springframework.http.converter.StringHttpMessageConverter"/>
        <bean class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter"/>
    </util:list>



    <!--全局WebBindingInitializer的配置-->
    <bean id="configurableWebBindingInitializer"
          class="org.springframework.web.bind.support.ConfigurableWebBindingInitializer">
        <property name="validator" ref="localValidatorFactoryBean"/>
        <property name="conversionService" ref="conversionServiceFactoryBean"/>
    </bean>



    <!--validate 设置-->
    <bean id="localValidatorFactoryBean"
          class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
        <property name="validationMessageSource" ref="resourceBundleMessageSource"/>
    </bean>

    <bean id="resourceBundleMessageSource"
          class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
        <property name="basename" value="classpath:messages/validate"/>
        <property name="defaultEncoding" value="UTF-8"/>
        <property name="cacheSeconds" value="60"/>
    </bean>

     <!--add 新的转换器-->
    <bean id="conversionServiceFactoryBean"
          class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
        <property name="converters">
            <util:list>
                <bean class="conver.UserConvert"/>
                <bean class="conver.BirthdayConvert"/>
            </util:list>
        </property>
    </bean>



    <!--velocityViewResolver-->
    <bean id="velocityViewResolver"
          class="org.springframework.web.servlet.view.velocity.VelocityLayoutViewResolver">
        <property name="cache" value="true"/>
        <property name="exposeSpringMacroHelpers" value="true"/>
        <property name="requestContextAttribute" value="true"/>
        <property name="exposeSessionAttributes" value="true"/>
        <property name="allowSessionOverride" value="true"/>
        <property name="prefix" value=""></property>
        <property name="suffix" value=".vm"></property>
        <property name="order" value="1"></property>
        <property name="contentType" value="text/html; charset=UTF-8"></property>
        <property name="toolboxConfigLocation" value="/WEB-INF/config/velocity-toolbox.xml"></property>
        <property name="viewClass" value="org.springframework.web.servlet.view.velocity.VelocityLayoutView"/>
        <property name="layoutUrl" value="layout/layout.vm"/>
    </bean>

    <!-- velocity view config -->
    <bean id="velocityConfig"
          class="org.springframework.web.servlet.view.velocity.VelocityConfigurer">
        <property name="resourceLoaderPath" value="/WEB-INF/velocityTemplates"/>
        <property name="velocityProperties">
            <props>
                <prop key="input.encoding">UTF-8</prop>
                <prop key="output.encoding">UTF-8</prop>
                <prop key="parser.pool.size">100</prop>
                <prop key="velocimacro.library">macros/macros.vm</prop>
                <prop key="velocimacro.library.autoreload">true</prop>
            </props>
        </property>
    </bean>

</beans>
